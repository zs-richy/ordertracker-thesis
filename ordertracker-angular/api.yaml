---
openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://127.0.0.1:8080
  description: Generated server url
paths:
  "/auth/signup":
    post:
      tags:
      - auth-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignupRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/auth/authenticate":
    post:
      tags:
      - auth-controller
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LoginRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/api/save-product":
    post:
      tags:
      - product-controller
      operationId: saveProduct
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Product"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Product"
  "/api/order/new-order":
    post:
      tags:
      - order-controller
      operationId: newOrder
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewOrderDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/api/add-product":
    post:
      tags:
      - product-controller
      operationId: addProduct
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Product"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Product"
  "/add-image":
    post:
      tags:
      - image-controller
      operationId: addImage
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ImageDto"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/find-image-by-product-id":
    get:
      tags:
      - image-controller
      operationId: findImageByProductId
      parameters:
      - name: findImageDto
        in: query
        required: true
        schema:
          "$ref": "#/components/schemas/FindImageDto"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                uniqueItems: true
                type: array
                items:
                  "$ref": "#/components/schemas/Image"
  "/find-image-by-id":
    get:
      tags:
      - image-controller
      operationId: findImageById
      parameters:
      - name: dto
        in: query
        required: true
        schema:
          "$ref": "#/components/schemas/ImageDto"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ImageWithBinary"
  "/api/order/orders":
    get:
      tags:
      - order-controller
      operationId: getOrders
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/OrderDto"
  "/api/get-products":
    get:
      tags:
      - product-controller
      operationId: getProducts
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ProductsDto"
  "/api/find-product-by-id":
    get:
      tags:
      - product-controller
      operationId: findProductById
      parameters:
      - name: findProductByIdDto
        in: query
        required: true
        schema:
          "$ref": "#/components/schemas/FindProductByIdDto"
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Product"
components:
  schemas:
    SignupRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Image:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - GENERAL
          - THUMBNAIL
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: integer
          format: int32
        images:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/Image"
    NewOrderDto:
      type: object
      properties:
        orderItems:
          type: object
          additionalProperties:
            type: integer
            format: int32
    ImageDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        imageData:
          type: array
          items:
            type: string
            format: byte
        productId:
          type: integer
          format: int64
    FindImageDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tipus:
          type: string
    ImageWithBinary:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - GENERAL
          - THUMBNAIL
        imageData:
          type: array
          items:
            type: string
            format: byte
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        status:
          type: string
          enum:
          - CREATED
          - WORKING
          - PREPARING
          - DELIVERING
          - COMPLETED
        orderItems:
          uniqueItems: true
          type: array
          items:
            "$ref": "#/components/schemas/OrderItem"
    OrderDto:
      type: object
      properties:
        orders:
          type: array
          items:
            "$ref": "#/components/schemas/Order"
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        product:
          "$ref": "#/components/schemas/Product"
        count:
          type: integer
          format: int32
    ProductsDto:
      type: object
      properties:
        productList:
          type: array
          items:
            "$ref": "#/components/schemas/Product"
    FindProductByIdDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        withBinary:
          type: boolean
